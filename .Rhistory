fviz_mca_var(res.mca,
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
var <- get_mca_var(res.mca)
var$cos2
View(var$cos2)
table(clean_responses[,c(1,3)])
twoquestions <- table(clean_responses[,c(1,3)])
View(twoquestions)
twoquestions <- table(clean_responses[,c(1,3)])
twoquestions
CA(twoquestions)
CA(twoquestions)
twoquestions <- table(clean_responses[,c(1,3)])
twoquestions
CA(twoquestions)
var1 <- get_mca_ind(res.mca)
var1$cos2
var1 <- get_mca_ind(res.mca)
var1$cos2
View(var1$cos2)
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
fviz_cos2(res.mca, choice = "var", axes = 1:2)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
View(clean_responses)
View(clean_responses)
View(clean_responses)
fviz_mca_ind(res.mca,
label = "none", # hide individual labels
habillage = "prog", # color by groups
palette = c("#00AFBB", "#E7B800"),
addEllipses = TRUE, ellipse.type = "confidence",
ggtheme = theme_minimal())
fviz_mca_ind(res.mca,
label = "none", # hide individual labels
habillage = "prog", # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE, ellipse.type = "confidence",
ggtheme = theme_minimal())
fviz_mca_ind(res.mca,
label = "none", # hide individual labels
habillage = "prog", # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07", "#888E07"),
addEllipses = TRUE, ellipse.type = "confidence",
ggtheme = theme_minimal())
fviz_mca_ind(res.mca,
label = "none", # hide individual labels
habillage = "object_clairs", # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07", "#888E07"),
addEllipses = TRUE, ellipse.type = "confidence",
ggtheme = theme_minimal())
fviz_mca_ind(res.mca,
label = "none", # hide individual labels
habillage = "object_clairs", # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07", "#888E07"),
addEllipses = TRUE, ellipse.type = "confidence",
ggtheme = theme_minimal())
fviz_mca_ind(res.mca, habillage = 2, addEllipses = TRUE)
fviz_mca_ind(res.mca, habillage = 4, addEllipses = TRUE)
fviz_ellipses(res.mca, c("prog", "bien_exposée"),
geom = "point")
fviz_mca_ind(res.mca, habillage = 4, addEllipses = TRUE)
fviz_mca_var(res.mca, choice = "ind.sup",
ggtheme = theme_minimal())
fviz_contrib(res.mca, choice = "ind", axes = 1:2, top = 15)
PCA(clean_responses)
burt = burt(clean_responses)
help(burt)
??burt
plot(res.mca , axes = 3:4)
plot(res.mca$ind , axes = 3:4)
plot(res.mca$var$coord , axes = 3:4)
plot(res.mca$ind$coord , axes = 3:4)
plot(res.mca$ind$coord , axes = 3:4 , label_both())
plot(res.mca$ind$coord , axes = 3:4)
res.mca$ind$coord
MCA(clean_responses[1:20,])
MCA(clean_responses[20:47,])
MCA(clean_responses , ind.sup = 45)
MCA(clean_responses[-45])
MCA(clean_responses[-45 ,])
MCA(clean_responses[c(-45) ,])
MCA(clean_responses[-c(45,12) ,])
MCA(clean_responses[-c(45,12) ,])$ind$contrib
MCA(clean_responses[-c(45,12) ,])$ind$cos2
twoquestions <- table(clean_responses[,c(1,3)])
twoquestions
CA(twoquestions)
twoquestions[twoquestions=="B"]<= &
twoquestions[twoquestions=="B"]<= 1
twoquestions[twoquestions=="M"]<= 2
twoquestions[twoquestions=="TB"]<= 3
twoquestions[twoquestions=="TM"]<= 4
CA(twoquestions)
twoquestions
deuxQuestions<= c(c(13,1,8,0),c(3,1,2,0),c(1,0,16,1),c(1,0,0,0))
deuxQuestions<- c(c(13,1,8,0),c(3,1,2,0),c(1,0,16,1),c(1,0,0,0))
deuxQuestions
deuxQuestions<- matrix(c(13,1,8,0),c(3,1,2,0),c(1,0,16,1),c(1,0,0,0))
deuxQuestions<- c(c(13,1,8,0),c(3,1,2,0),c(1,0,16,1),c(1,0,0,0),4,4)
deuxQuestions
deuxQuestions<- matrix(c(c(13,1,8,0),c(3,1,2,0),c(1,0,16,1),c(1,0,0,0)),4,4)
deuxQuestions
CA(deuxQuestions)
deuxVars.ca =CA(deuxQuestions)
View(disjonctif)
View(disjonctif)
MCA(disjonctif)
z= t(disjonctif) %*% disjonctif
View(z)
PCA(z)
PCA(z)
disjonctif = tab.disjonctif.prop(clean_responses,seed=NULL,row.w=N)
help(tab.disjonctif.prop)
clean_responses
fviz_pca_biplot(PCA(z))
MCA(z)
twoquestions <- table(clean_responses[,c(1,3)])
View(twoquestions)
library(FactoMineR)
CA(twoquestions)
z <- t(twoquestions) %*% twoquestions
CA(Z)
CA(z)
View(Z)
View(z)
View(z)
z
twoquestions
z <-(twoquestions) %*% t(twoquestions)
z
twoquestions <- table(clean_responses[,1],clean_responses)
twoquestions <- table(clean_responses[,1],clean_responses[,2])
twoquestions
CA(twoquestions)
z <-(twoquestions) %*% t(twoquestions)
z
CA(z)
CA(twoquestions)
twoquestions
View(twi)
View(twoquestions)
View(twoquestions)
twoquestions
CA(twoquestions)
flutter runif()
res.mca <- MCA(clean_responses , ind.sup(c(17,20)))
res.mca <- MCA(clean_responses , ind.sup=c(17,20))
library("readxl")
library("FactoMineR")
library("factoextra")
my_data <- read_excel("dataset.xlsx", sheet = "RES1")
my_data[my_data=="++"]<- "TB"
my_data[my_data=="+"]<- "B"
#my_data[my_data=="--"]<- "TM"
my_data[my_data=="- -"]<- "TM"
my_data[my_data=="-"]<- "M"
clean_responses = my_data[1:47,c(2:11)]
clean_frequences= my_data[50:55,c(1:11)]
write.table(clean_responses, "clean-data.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
write.table(clean_frequences, "clean-frequences.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
summurisedData = read.table(file = "clean-frequences.txt" , header = TRUE)
"construction de la table disjonctive"
library(FactoMineR)
disjonctif = tab.disjonctif.prop(clean_responses,seed=NULL,row.w=NULL)
"starting the mca analysis"
res.mca <- MCA(clean_responses , ind.sup=c(17,20))
res.mca <- MCA(clean_responses , ind.sup=c(17,21))
library("readxl")
library("FactoMineR")
library("factoextra")
my_data <- read_excel("dataset.xlsx", sheet = "RES1")
my_data[my_data=="++"]<- "TB"
my_data[my_data=="+"]<- "B"
#my_data[my_data=="--"]<- "TM"
my_data[my_data=="- -"]<- "TM"
my_data[my_data=="-"]<- "M"
clean_responses = my_data[1:47,c(2:11)]
clean_frequences= my_data[50:55,c(1:11)]
write.table(clean_responses, "clean-data.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
write.table(clean_frequences, "clean-frequences.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
summurisedData = read.table(file = "clean-frequences.txt" , header = TRUE)
"construction de la table disjonctive"
library(FactoMineR)
disjonctif = tab.disjonctif.prop(clean_responses,seed=NULL,row.w=NULL)
"starting the mca analysis"
res.mca <- MCA(clean_responses)
library("factoextra")
eig.val <- get_eigenvalue(res.mca)
View(eig.val)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 47))
fviz_mca_biplot(res.mca,
repel = TRUE, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
"correlation entre les variables"
fviz_mca_var(res.mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
"visualiser seulement les modalités (sans les individus)"
fviz_mca_var(res.mca,
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
# ******************** qualité de reprasentation des variables ***********************
var <- get_mca_var(res.mca)
var$cos2
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# ******************** qualité de reprasentation des individus ***********************
var1 <- get_mca_ind(res.mca)
var1$cos2
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# relation entre les modalités
fviz_mca_var(res.mca, col.var="blue", shape.var = 15,
repel = TRUE)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
# Cos2 of variable categories on Dim.1 and Dim.2
fviz_cos2(res.mca, choice = "var", axes = 1:2)
#************* contributions des variables *****************
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "var", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "var", axes = 2, top = 15)
#contribution of rows to plot 1-2
fviz_contrib(res.mca, choice = "var", axes = 1:2, top = 15)
#************* contributions des individus *******************
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "ind", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "ind", axes = 2, top = 15)
#contribution of rows to plot 1-2
fviz_contrib(res.mca, choice = "ind", axes = 1:2, top = 15)
# *************** representarions avec ellipse ********************
#une seule variable
fviz_mca_ind(res.mca, habillage = 4, addEllipses = TRUE)
#deux variables
fviz_ellipses(res.mca, c("prog", "bien_exposée"), geom = "point")
#croiser deux questions
twoquestions <- table(clean_responses[,c(1,3)])
View(twoquestions)
library("readxl")
library("FactoMineR")
library("factoextra")
my_data <- read_excel("dataset.xlsx", sheet = "RES1")
my_data[my_data=="++"]<- "TB"
my_data[my_data=="+"]<- "B"
#my_data[my_data=="--"]<- "TM"
my_data[my_data=="- -"]<- "TM"
my_data[my_data=="-"]<- "M"
clean_responses = my_data[1:47,c(2:11)]
clean_frequences= my_data[50:55,c(1:11)]
write.table(clean_responses, "clean-data.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
write.table(clean_frequences, "clean-frequences.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
summurisedData = read.table(file = "clean-frequences.txt" , header = TRUE)
"construction de la table disjonctive"
library(FactoMineR)
disjonctif = tab.disjonctif.prop(clean_responses,seed=NULL,row.w=NULL)
"starting the mca analysis"
res.mca <- MCA(clean_responses)
library("factoextra")
eig.val <- get_eigenvalue(res.mca)
View(eig.val)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 47))
fviz_mca_biplot(res.mca,
repel = TRUE, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
"correlation entre les variables"
fviz_mca_var(res.mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
"visualiser seulement les modalités (sans les individus)"
fviz_mca_var(res.mca,
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
# ******************** qualité de reprasentation des variables ***********************
var <- get_mca_var(res.mca)
var$cos2
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# ******************** qualité de reprasentation des individus ***********************
var1 <- get_mca_ind(res.mca)
var1$cos2
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# relation entre les modalités
fviz_mca_var(res.mca, col.var="blue", shape.var = 15,
repel = TRUE)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
# Cos2 of variable categories on Dim.1 and Dim.2
fviz_cos2(res.mca, choice = "var", axes = 1:2)
#************* contributions des variables *****************
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "var", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "var", axes = 2, top = 15)
#contribution of rows to plot 1-2
fviz_contrib(res.mca, choice = "var", axes = 1:2, top = 15)
#************* contributions des individus *******************
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "ind", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "ind", axes = 2, top = 15)
#contribution of rows to plot 1-2
fviz_contrib(res.mca, choice = "ind", axes = 1:2, top = 15)
# *************** representarions avec ellipse ********************
#une seule variable
fviz_mca_ind(res.mca, habillage = 4, addEllipses = TRUE)
#deux variables
fviz_ellipses(res.mca, c("prog", "bien_exposée"), geom = "point")
#croiser deux questions
twoquestions <- table(clean_responses[,c(1,3)])
View(twoquestions)
fviz_mca_biplot(res.mca,
repel = TRUE, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
X = clean_responses[,c(1,3)]
x
X
X1 = table(X[,1] , X[,2])
X = clean_responses[,c(1,3)]
X
X1 = table(X[,1] , X[,2])
X1 = table(X[,c(1)] , X[,c(2)])
X1 = table(X[,1])
X1 = table(c(X[,c(1)] , X[,c(2)]))
X1
CA(X1)
X1 = table(X[,c(1)] , X[,c(2)])
library("readxl")
library("FactoMineR")
library("factoextra")
my_data <- read_excel("dataset.xlsx", sheet = "RES1")
my_data[my_data=="++"]<- "TB"
my_data[my_data=="+"]<- "B"
#my_data[my_data=="--"]<- "TM"
my_data[my_data=="- -"]<- "TM"
my_data[my_data=="-"]<- "M"
clean_responses = my_data[1:47,c(2:11)]
clean_frequences= my_data[50:55,c(1:11)]
write.table(clean_responses, "clean-data.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
write.table(clean_frequences, "clean-frequences.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
summurisedData = read.table(file = "clean-frequences.txt" , header = TRUE)
"construction de la table disjonctive"
library(FactoMineR)
disjonctif = tab.disjonctif.prop(clean_responses,seed=NULL,row.w=NULL)
"starting the mca analysis"
res.mca <- MCA(clean_responses)
library("factoextra")
eig.val <- get_eigenvalue(res.mca)
View(eig.val)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 47))
fviz_mca_biplot(res.mca,
repel = TRUE, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
"correlation entre les variables"
fviz_mca_var(res.mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
"visualiser seulement les modalités (sans les individus)"
fviz_mca_var(res.mca,
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
# ******************** qualité de reprasentation des variables ***********************
var <- get_mca_var(res.mca)
var$cos2
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# ******************** qualité de reprasentation des individus ***********************
var1 <- get_mca_ind(res.mca)
var1$cos2
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# relation entre les modalités
fviz_mca_var(res.mca, col.var="blue", shape.var = 15,
repel = TRUE)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
# Cos2 of variable categories on Dim.1 and Dim.2
fviz_cos2(res.mca, choice = "var", axes = 1:2)
#************* contributions des variables *****************
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "var", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "var", axes = 2, top = 15)
#contribution of rows to plot 1-2
fviz_contrib(res.mca, choice = "var", axes = 1:2, top = 15)
#************* contributions des individus *******************
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "ind", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "ind", axes = 2, top = 15)
#contribution of rows to plot 1-2
fviz_contrib(res.mca, choice = "ind", axes = 1:2, top = 15)
# *************** representarions avec ellipse ********************
#une seule variable
fviz_mca_ind(res.mca, habillage = 4, addEllipses = TRUE)
#deux variables
fviz_ellipses(res.mca, c("prog", "bien_exposée"), geom = "point")
#croiser deux questions
twoquestions <- table(clean_responses[,c(1,3)])
View(twoquestions)
fviz_mca_biplot(res.mca,
repel = TRUE, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
library("readxl")
library("FactoMineR")
library("factoextra")
my_data <- read_excel("dataset.xlsx", sheet = "RES1")
my_data[my_data=="++"]<- "TB"
my_data[my_data=="+"]<- "B"
#my_data[my_data=="--"]<- "TM"
my_data[my_data=="- -"]<- "TM"
my_data[my_data=="-"]<- "M"
clean_responses = my_data[1:47,c(2:11)]
clean_frequences= my_data[50:55,c(1:11)]
write.table(clean_responses, "clean-data.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
write.table(clean_frequences, "clean-frequences.txt", append = FALSE, sep = " ", dec = ".",row.names = FALSE, col.names = FALSE)
summurisedData = read.table(file = "clean-frequences.txt" , header = TRUE)
"construction de la table disjonctive"
library(FactoMineR)
disjonctif = tab.disjonctif.prop(clean_responses,seed=NULL,row.w=NULL)
"starting the mca analysis"
res.mca <- MCA(clean_responses)
library("factoextra")
eig.val <- get_eigenvalue(res.mca)
View(eig.val)
fviz_screeplot(res.mca, addlabels = TRUE, ylim = c(0, 47))
fviz_mca_biplot(res.mca,
repel = TRUE, # Avoid text overlapping (slow if many point)
ggtheme = theme_minimal())
"correlation entre les variables"
fviz_mca_var(res.mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
"visualiser seulement les modalités (sans les individus)"
fviz_mca_var(res.mca,
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_minimal())
# ******************** qualité de reprasentation des variables ***********************
var <- get_mca_var(res.mca)
var$cos2
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# ******************** qualité de reprasentation des individus ***********************
var1 <- get_mca_ind(res.mca)
var1$cos2
"visualiser les variables colorés selon les qualités de representations"
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # Avoid text overlapping
ggtheme = theme_minimal())
# relation entre les modalités
fviz_mca_var(res.mca, col.var="blue", shape.var = 15,
repel = TRUE)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
# Cos2 of variable categories on Dim.1 and Dim.2
fviz_cos2(res.mca, choice = "var", axes = 1:2)
#************* contributions des variables *****************
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "var", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "var", axes = 2, top = 15)
#contribution of rows to plot 1-2
fviz_contrib(res.mca, choice = "var", axes = 1:2, top = 15)
#************* contributions des individus *******************
# Contributions of rows to dimension 1
fviz_contrib(res.mca, choice = "ind", axes = 1, top = 15)
# Contributions of rows to dimension 2
fviz_contrib(res.mca, choice = "ind", axes = 2, top = 15)
#contribution of rows to plot 1-2
fviz_contrib(res.mca, choice = "ind", axes = 1:2, top = 15)
# *************** representarions avec ellipse ********************
#une seule variable
fviz_mca_ind(res.mca, habillage = 4, addEllipses = TRUE)
#deux variables
fviz_ellipses(res.mca, c("prog", "bien_exposée"), geom = "point")
#croiser deux questions
twoquestions <- table(clean_responses[,c(1,3)])
View(twoquestions)
